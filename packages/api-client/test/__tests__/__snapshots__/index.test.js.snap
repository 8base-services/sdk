// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`As a developer, I can create client and send request with variables. 1`] = `
Object {
  "query": "query { companyName }",
  "variables": Object {
    "variable": 2,
  },
}
`;

exports[`As a developer, I can create client and send request. 1`] = `
Object {
  "query": "query { companyName }",
  "variables": Object {},
}
`;

exports[`As a developer, I can create client, set API credentials and send request. 1`] = `
Object {
  "body": Object {
    "query": "query { companyName }",
    "variables": Object {},
  },
  "headers": Object {
    "accept": Array [
      "*/*",
    ],
    "accept-encoding": Array [
      "gzip,deflate",
    ],
    "account-id": Array [
      "accountId",
    ],
    "authorization": Array [
      "idToken",
    ],
    "connection": Array [
      "close",
    ],
    "content-length": Array [
      "48",
    ],
    "content-type": Array [
      "application/json",
    ],
    "host": "api.test.8base.com",
    "user-agent": Array [
      "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
    ],
  },
}
`;

exports[`As a developer, I can send queries with graphql tag. 1`] = `
Object {
  "body": Object {
    "query": Object {
      "definitions": Array [
        Object {
          "directives": Array [],
          "kind": "OperationDefinition",
          "operation": "query",
          "selectionSet": Object {
            "kind": "SelectionSet",
            "selections": Array [
              Object {
                "arguments": Array [],
                "directives": Array [],
                "kind": "Field",
                "name": Object {
                  "kind": "Name",
                  "value": "companyName",
                },
              },
            ],
          },
          "variableDefinitions": Array [],
        },
      ],
      "kind": "Document",
      "loc": Object {
        "end": 21,
        "start": 0,
      },
    },
    "variables": Object {},
  },
  "headers": Object {
    "accept": Array [
      "*/*",
    ],
    "accept-encoding": Array [
      "gzip,deflate",
    ],
    "connection": Array [
      "close",
    ],
    "content-length": Array [
      "326",
    ],
    "content-type": Array [
      "application/json",
    ],
    "host": "api.test.8base.com",
    "user-agent": Array [
      "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
    ],
  },
}
`;

exports[`When client receive other errors, it should throw that error. 1`] = `
Object {
  "data": null,
  "errors": Array [
    Object {
      "code": "InvalidTokenError",
    },
  ],
  "status": 502,
}
`;

exports[`When client receive token expired error, it should refresh token and repeat my request. 1`] = `
Object {
  "body": Object {
    "query": "query { companyName }",
    "variables": Object {},
  },
  "headers": Object {
    "accept": Array [
      "*/*",
    ],
    "accept-encoding": Array [
      "gzip,deflate",
    ],
    "account-id": Array [
      "accountId",
    ],
    "authorization": Array [
      "newIdToken",
    ],
    "connection": Array [
      "close",
    ],
    "content-length": Array [
      "48",
    ],
    "content-type": Array [
      "application/json",
    ],
    "host": "api.test.8base.com",
    "user-agent": Array [
      "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)",
    ],
  },
}
`;
